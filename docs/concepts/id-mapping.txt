
// Generalization:
-- Initializing an object --
[C->S] (request )  header: 0x0 message: local_id
[S->C] (response)  header: 0xfe - no id message: local_id

-- C->S RPC --
[C->S] (request )  header: remote_id
[S->C] (reply   )  header: 0xfe - no id

-- S->C RPC --
[S->C] (call)  header: remote_id
[C->S] (----)  not observed in communication yet, should be perfectly possible


// Note that line numbers refer to `packet-logs/latest-log-sku.txt`
// line 2166

// Here the client has created an object ID for itself to fill the channel upon response.
// Note that unknown == 0x00, it is a _null_ object id (meaning the client doesn't [can't, even]
// know what the server's ID is or will be until it gets the response) -- in any case, it is useless
// to the CreateChannel implementation.
// The request ID is used in initial-mapping instead of passing the unknown field (see next
// message below); since the 0xfe service is used for responses it can't even supply that field
// in the header.

*** server received packet ***
> this is total packet 0x0058
> this is server's 0x002a-th received packet
> packet header: [service=0x7] [method=0x1] [request=0x27] [unknown=0x0] [size=0x6]
> packet payload/protobuffer:
     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 
     -----------------------------------------------
0000 12 02 38 03 20 0a
> packet received on service id 0x07 with hash 0xf4e7fa35
handler 0xf4e7fa35 called, method: 0x1 (service id: 0x07)
>>> CreateChannelRequest
state {
  privacy_level: PRIVACY_LEVEL_OPEN_INVITATION
}
object_id: 10                       // <- This is the client's ID for the channel

// line 2184

// Now here we're calling on service 0xfe, so there is no unknown field (which is okay,
// since the client is waiting for this exact response with this exact request ID).
// This message supplies the server's ID for the newly created channel.
// The client will map its ID for the channel to the ID in this message, and will
// make calls using it later on.

*** client received packet ***
> this is total packet 0x0059
> this is client's 0x002f-th received packet
> packet header: Answer [service=0xfe] [method=0x0] [request=0x27] [size=0x18]
> packet payload/protobuffer:
     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 
     -----------------------------------------------
0000 08 95 8c 04 12 12 09 7d 0d aa c9 77 ac 04 06 11
0010 9f 27 00 00 bd ec e5 9b
> packet received on service id 0xfe with hash 0xfffffffe
handler 0xfffffffe called, method: 0x0, request:0x0027 (service id: 0xfe)
>>> CreateChannelResponse
object_id: 67093                    // <- This is the server's ID for the channel
channel_id {
  high: 433661094618860925
  low: 11233645142038554527
}


// line 2224

// Here the server has called NotifyAdd on the client
// As expected, unknown==0xa (object_id: 10 in the initial setup)

*** client received packet ***
> this is total packet 0x005b
> this is client's 0x0030-th received packet
> packet header: [service=0xa] [method=0x1] [request=0x0] [unknown=0xa] [size=0x72]
> packet payload/protobuffer:
     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 
     -----------------------------------------------
0000 0a 46 0a 3c 0a 12 09 00 00 00 00 00 00 00 01 11
0010 f9 5b 00 00 00 00 00 00 12 12 09 33 44 00 00 62
0020 00 00 02 11 21 5c 4f 00 00 00 00 00 1a 12 09 33
0030 44 00 00 62 01 00 03 11 c8 2c c5 33 a3 54 63 cb
0040 12 06 10 02 18 ff f7 03 12 1e 0a 14 1a 12 09 33
0050 44 00 00 62 01 00 03 11 c8 2c c5 33 a3 54 63 cb
0060 12 06 10 02 18 ff f7 03 1a 08 08 08 10 01 28 0c
0070 38 03
> packet received on service id 0x0a with hash 0xbf8c8094
handler 0xbf8c8094 called, method: 0x1 (service id: 0x0a)
>>> AddNotification
self {
  identity {
    account_id {
      high: 72057594037927936
      low: 23545
    }
    game_account_id {
      high: 144115608982668339
      low: 5200929
    }
    toon_id {
      high: 216174302532224051
      low: 14655650672318688456
    }
  }
  state {
    role: 2
    privileges: 64511
  }
}
member {
  identity {
    toon_id {
      high: 216174302532224051
      low: 14655650672318688456
    }
  }
  state {
    role: 2
    privileges: 64511
  }
}
channel_state {
  max_members: 8
  min_members: 1
  max_invitations: 12
  privacy_level: PRIVACY_LEVEL_OPEN_INVITATION
}

// line 2394

// Here is a case of the client calling on the channel
// As expected, it has sent us the _server's_ ID in the unknown field (0x10615, or 67093), which
// it has previously mapped to its own ID (which is 0xa, or 10)

*** server received packet ***
> this is total packet 0x0060
> this is server's 0x002f-th received packet
> packet header: [service=0x4] [method=0x4] [request=0x2c] [unknown=0x10615] [size=0x68]
> packet payload/protobuffer:
     00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 
     -----------------------------------------------
0000 12 66 1a 64 0a 19 44 33 2e 50 61 72 74 79 2e 47
0010 61 6d 65 43 72 65 61 74 65 50 61 72 61 6d 73 12
0020 47 3a 45 08 02 10 80 02 1a 2d 08 00 10 00 1d 94
0030 56 01 00 20 ff ff ff ff ff ff ff ff ff 01 2a 15
0040 08 b3 88 81 80 a0 ac 80 80 03 10 c8 d9 94 9e b3
0050 94 d5 b1 cb 01 30 00 2a 0d 46 65 6d 57 69 7a 61
0060 72 64 23 37 33 36 30 01
> packet received on service id 0x04 with hash 0xb732db32
handler 0xb732db32 called, method: 0x4 (service id: 0x04)
>>> UpdateChannelStateRequest
state_change {
  attribute {
    name: "D3.Party.GameCreateParams"
    value {
      message_value: "\010\002\020\200\002\032-\010\000\020\000\035\224V\001\000 \377\377\377\377\377\377\377\377\377\001*\025\010\263\210\201\200\240\254\200\200\003\020\310\331\224\236\263\224\325\261\313\0010\000*\rFemWizard#7360\001"
    }
  }
}
